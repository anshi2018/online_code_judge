/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Mainserver.java
 *
 * Created on Sep 4, 2016, 10:52:16 AM
 */
package onlinejudge1;

import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author DILIP JI
 */
public class Mainserver extends javax.swing.JFrame {

    public static ArrayList<Socket> ConnectionArray = new ArrayList<Socket>();
    
    public static ArrayList<String> CurrentUsers = new ArrayList<String>();
    
    
    /** Creates new form Mainserver */
    public Mainserver() {
        initComponents();
       //  System.out.println("Server started yay");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Start Server");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jButton1)
                .addContainerGap(174, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(144, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(133, 133, 133))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
           System.out.println("Server starting");
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
   try
        {
            final int port=7891;
            int i=0;
            ServerSocket ser=new ServerSocket(port);
            System.out.println("Waiting for clients");
            while(true)
            {
                Socket sock=ser.accept();
                ConnectionArray.add(sock);
                System.out.println("Client connected to"+sock.getLocalAddress().getHostName());
             //   AddUserName(sock);
                ClientWork c=new ClientWork(sock);
          System.out.println(i+"bj,kj");
          i++;
                Thread X=new Thread(c);
                X.start();
            
        
            }
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
          // Mainserver obj=new Mainserver();
 
        /* Create and display the form */
   /*     java.awt.EventQueue.invokeLater(new Runnable() {

          public void run() {
                new Mainserver().setVisible(true);
               System.out.println("Server started yay");
            }
        });*/
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
 public static void AddUserName(Socket x) throws Exception
    {
        
        Scanner input=new Scanner(x.getInputStream());
        String username=input.nextLine();
        CurrentUsers.add(username);
  System.out.println(CurrentUsers);
        int i;
        for(i=0;i<Mainserver.ConnectionArray.size();i++)
        {
            Socket temp=(Socket)Mainserver.ConnectionArray.get(i);
            PrintWriter out=new PrintWriter(temp.getOutputStream());
            out.println("!!"+CurrentUsers);
            out.flush();
        }
    }
}
 
    //    throw new UnsupportedOperationException("Not supported yet.");
       

